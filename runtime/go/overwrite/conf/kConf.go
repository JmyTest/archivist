// Code generated by archivist. DO NOT EDIT.

package conf

import (
	"time"

	"github.com/kingsgroupos/archivist/runtime/go/archivist"
	"github.com/kingsgroupos/misc/wtime"
	"github.com/pkg/errors"
)

var (
	_ = time.After
	_ = errors.New
	_ = archivist.NewArchivist
	_ = wtime.ParseDuration
)

// easyjson:json
type KConf map[string]*KConfItem

// KConfItem represents /map[]
type KConfItem struct {
	Kxa int64 `json:"Kxa" bson:"Kxa"`
	Kxb int64 `json:"Kxb" bson:"Kxb"`
}

func (this *KConf) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok
	v := *this
	for _, v := range v {
		if err := v.bindRefs(c); err != nil {
			return err
		}
	}

	return nil
}

func (this *KConfItem) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok

	return nil
}
