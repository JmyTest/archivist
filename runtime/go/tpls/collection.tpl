{{- "" -}}
// Code generated by archivist. DO NOT EDIT.

package {{.Pkg}}

type Collection struct {
{{- if .CollectionExtension}}
	Extension {{graveAccent}}json:"-"{{graveAccent}}
{{- end}}
	filename2Conf map[string]interface{}
{{""}}
{{- range .Structs -}}
{{""}}
	{{toPascal .}} {{toPascal .}}
{{- end -}}
{{""}}
}

func (this *Collection) Filename2Conf() map[string]interface{} {
	return this.filename2Conf
}

func NewCollection() interface{} {
	c := &Collection{}
	c.FixPointers()
	return c
}

type binder interface {
	bindRefs(c *Collection) error
}

func (this *Collection) FixPointers() {
	this.filename2Conf = map[string]interface{} {
{{- range $i, $v := .Structs -}}
{{""}}
		"{{index $.JSONFiles $i}}": &this.{{toPascal .}},
{{- end -}}
{{""}}
	}
}

func (this *Collection) BindRefs() error {
	for _, v := range this.filename2Conf {
		if err := v.(binder).bindRefs(this); err != nil {
			return err
		}
	}
	return nil
}

var revRefGraph = map[string][]string {
{{- range $k, $a := .RevRefGraph}}
	"{{$k}}": {
	{{- range $a}}
		"{{.}}",
	{{- end}}
	},
{{- end}}
}

func (this *Collection) RevRefGraph() map[string][]string {
	return revRefGraph
}
