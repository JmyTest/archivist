// Code generated by archivist. DO NOT EDIT.

package conf

import (
	"time"

	"github.com/pkg/errors"
	"gitlab-ee.funplus.io/watcher/watcher/archivist/runtime/go/archivist"
	"gitlab-ee.funplus.io/watcher/watcher/misc/wtime"
)

var (
	_ = time.After
	_ = errors.New
	_ = archivist.NewArchivist
	_ = wtime.ParseDuration
)

// easyjson:json
type ComplexConf map[int64]*ComplexConfItem

// ComplexConfItem represents /map[]
type ComplexConfItem struct {
	X3    [][]int64                           `json:"x3" bson:"x3"`
	X5    []*ComplexConf_241695546            `json:"x5" bson:"x5"`
	X6    []map[string][][]int64              `json:"x6" bson:"x6"` // a long note, long long ...
	X6Ref []map[string][][]*Workbook2ConfItem `json:"-" bson:"-"`   // a long note, long long ...
	X7    map[string]int64                    `json:"x7" bson:"x7"`
	Xx    [][]int64                           `json:"xx" bson:"xx"`
	XxRef [][]*Workbook2ConfItem              `json:"-" bson:"-"`
}

// ComplexConf_241695546 represents /map[]/x5/[]
type ComplexConf_241695546 struct {
	X5A    [][]int64              `json:"x5a" bson:"x5a"`
	X5ARef [][]*Workbook2ConfItem `json:"-" bson:"-"`
}

func (this *ComplexConf) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok
	v := *this
	for _, v := range v {
		if err := v.bindRefs(c); err != nil {
			return err
		}
	}

	return nil
}

func (this *ComplexConfItem) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok
	{
		v := this.X5
		for _, v := range v {
			if err := v.bindRefs(c); err != nil {
				return err
			}
		}
	}
	{
		this.X6Ref = make([]map[string][][]*Workbook2ConfItem, len(this.X6))
		v := this.X6
		r := this.X6Ref
		for k, v := range v {
			r[k] = make(map[string][][]*Workbook2ConfItem, len(v))
			r := r[k]
			for k, v := range v {
				r[k] = make([][]*Workbook2ConfItem, len(v))
				r := r[k]
				for k, v := range v {
					r[k] = make([]*Workbook2ConfItem, len(v))
					r := r[k]
					for k, v := range v {
						if v != 0 {
							r[k], ok = c.Workbook2Conf[v]
							if !ok {
								return errors.Errorf("<complex.json/map[]/x6/[]/map[]/[]> workbook2[%d] does NOT exist", v)
							}
						} else {
							r[k] = nil
						}
					}
				}
			}
		}
	}
	{
		this.XxRef = make([][]*Workbook2ConfItem, len(this.Xx))
		v := this.Xx
		r := this.XxRef
		for k, v := range v {
			r[k] = make([]*Workbook2ConfItem, len(v))
			r := r[k]
			for k, v := range v {
				if v != 0 {
					r[k], ok = c.Workbook2Conf[v]
					if !ok {
						return errors.Errorf("<complex.json/map[]/xx/[]> workbook2[%d] does NOT exist", v)
					}
				} else {
					r[k] = nil
				}
			}
		}
	}

	return nil
}

func (this *ComplexConf_241695546) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok
	{
		this.X5ARef = make([][]*Workbook2ConfItem, len(this.X5A))
		v := this.X5A
		r := this.X5ARef
		for k, v := range v {
			r[k] = make([]*Workbook2ConfItem, len(v))
			r := r[k]
			for k, v := range v {
				if v != 0 {
					r[k], ok = c.Workbook2Conf[v]
					if !ok {
						return errors.Errorf("<complex.json/map[]/x5/[]/x5a/[]> workbook2[%d] does NOT exist", v)
					}
				} else {
					r[k] = nil
				}
			}
		}
	}

	return nil
}
