// Code generated by archivist. DO NOT EDIT.

package conf

import (
	"time"

	"github.com/kingsgroupos/archivist/lib/go/archivist"
	"github.com/kingsgroupos/misc/wtime"
	"github.com/pkg/errors"
)

var (
	_ = time.After
	_ = errors.New
	_ = archivist.NewArchivist
	_ = wtime.ParseDuration
)

// easyjson:json
type ChimeracoderConf struct {
	ArchiveUrl       string                      `json:"archive_url"`
	Archived         bool                        `json:"archived"`
	AssigneesUrl     string                      `json:"assignees_url"`
	BlobsUrl         string                      `json:"blobs_url"`
	BranchesUrl      string                      `json:"branches_url"`
	CloneUrl         string                      `json:"clone_url"`
	CollaboratorsUrl string                      `json:"collaborators_url"`
	CommentsUrl      string                      `json:"comments_url"`
	CommitsUrl       string                      `json:"commits_url"`
	CompareUrl       string                      `json:"compare_url"`
	ContentsUrl      string                      `json:"contents_url"`
	ContributorsUrl  string                      `json:"contributors_url"`
	CreatedAt        string                      `json:"created_at"`
	DefaultBranch    string                      `json:"default_branch"`
	DeploymentsUrl   string                      `json:"deployments_url"`
	Description      string                      `json:"description"`
	DownloadsUrl     string                      `json:"downloads_url"`
	EventsUrl        string                      `json:"events_url"`
	Fork             bool                        `json:"fork"`
	Forks            int64                       `json:"forks"`
	ForksCount       int64                       `json:"forks_count"`
	ForksUrl         string                      `json:"forks_url"`
	FullName         string                      `json:"full_name"`
	GitCommitsUrl    string                      `json:"git_commits_url"`
	GitRefsUrl       string                      `json:"git_refs_url"`
	GitTagsUrl       string                      `json:"git_tags_url"`
	GitUrl           string                      `json:"git_url"`
	HasDownloads     bool                        `json:"has_downloads"`
	HasIssues        bool                        `json:"has_issues"`
	HasPages         bool                        `json:"has_pages"`
	HasProjects      bool                        `json:"has_projects"`
	HasWiki          bool                        `json:"has_wiki"`
	Homepage         string                      `json:"homepage"`
	HooksUrl         string                      `json:"hooks_url"`
	HtmlUrl          string                      `json:"html_url"`
	Id               int64                       `json:"id"`
	IssueCommentUrl  string                      `json:"issue_comment_url"`
	IssueEventsUrl   string                      `json:"issue_events_url"`
	IssuesUrl        string                      `json:"issues_url"`
	KeysUrl          string                      `json:"keys_url"`
	LabelsUrl        string                      `json:"labels_url"`
	Language         string                      `json:"language"`
	LanguagesUrl     string                      `json:"languages_url"`
	License          *ChimeracoderConf_435991868 `json:"license"`
	MergesUrl        string                      `json:"merges_url"`
	MilestonesUrl    string                      `json:"milestones_url"`
	Name             string                      `json:"name"`
	NetworkCount     int64                       `json:"network_count"`
	NodeId           string                      `json:"node_id"`
	NotificationsUrl string                      `json:"notifications_url"`
	OpenIssues       int64                       `json:"open_issues"`
	OpenIssuesCount  int64                       `json:"open_issues_count"`
	Owner            *ChimeracoderConf_240645118 `json:"owner"`
	Private          bool                        `json:"private"`
	PullsUrl         string                      `json:"pulls_url"`
	PushedAt         string                      `json:"pushed_at"`
	ReleasesUrl      string                      `json:"releases_url"`
	Size             int64                       `json:"size"`
	SshUrl           string                      `json:"ssh_url"`
	StargazersCount  int64                       `json:"stargazers_count"`
	StargazersUrl    string                      `json:"stargazers_url"`
	StatusesUrl      string                      `json:"statuses_url"`
	SubscribersCount int64                       `json:"subscribers_count"`
	SubscribersUrl   string                      `json:"subscribers_url"`
	SubscriptionUrl  string                      `json:"subscription_url"`
	SvnUrl           string                      `json:"svn_url"`
	TagsUrl          string                      `json:"tags_url"`
	TeamsUrl         string                      `json:"teams_url"`
	TreesUrl         string                      `json:"trees_url"`
	UpdatedAt        string                      `json:"updated_at"`
	Url              string                      `json:"url"`
	Watchers         int64                       `json:"watchers"`
	WatchersCount    int64                       `json:"watchers_count"`
}

// ChimeracoderConf_435991868 represents /license
type ChimeracoderConf_435991868 struct {
	Key    string `json:"key"`
	Name   string `json:"name"`
	NodeId string `json:"node_id"`
	SpdxId string `json:"spdx_id"`
}

// ChimeracoderConf_240645118 represents /owner
type ChimeracoderConf_240645118 struct {
	AvatarUrl         string `json:"avatar_url"`
	EventsUrl         string `json:"events_url"`
	FollowersUrl      string `json:"followers_url"`
	FollowingUrl      string `json:"following_url"`
	GistsUrl          string `json:"gists_url"`
	GravatarId        string `json:"gravatar_id"`
	HtmlUrl           string `json:"html_url"`
	Id                int64  `json:"id"`
	Login             string `json:"login"`
	NodeId            string `json:"node_id"`
	OrganizationsUrl  string `json:"organizations_url"`
	ReceivedEventsUrl string `json:"received_events_url"`
	ReposUrl          string `json:"repos_url"`
	SiteAdmin         bool   `json:"site_admin"`
	StarredUrl        string `json:"starred_url"`
	SubscriptionsUrl  string `json:"subscriptions_url"`
	Type              string `json:"type"`
	Url               string `json:"url"`
}

func (this *ChimeracoderConf) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok
	if err := this.License.bindRefs(c); err != nil {
		return err
	}
	if err := this.Owner.bindRefs(c); err != nil {
		return err
	}

	return nil
}

func (this *ChimeracoderConf_435991868) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok

	return nil
}

func (this *ChimeracoderConf_240645118) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok

	return nil
}
