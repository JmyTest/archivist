// Code generated by archivist. DO NOT EDIT.

package conf

import (
	"time"

	"github.com/kingsgroupos/archivist/lib/go/archivist"
	"github.com/kingsgroupos/misc/wtime"
	"github.com/pkg/errors"
)

var (
	_ = time.After
	_ = errors.New
	_ = archivist.NewArchivist
	_ = wtime.ParseDuration
)

// easyjson:json
type Workbook2Conf map[int64]*Workbook2ConfItem

// Workbook2ConfItem represents /map[]
type Workbook2ConfItem struct {
	ID          int64   `json:"ID"`
	MyBool      bool    `json:"MyBool"`      // 布尔值
	MyFloatVar  float64 `json:"MyFloatVar"`  // 浮点数
	MyIntVar    int64   `json:"MyIntVar"`    // 整数
	MyStringVar string  `json:"MyStringVar"` // 字符串
}

func (this *Workbook2Conf) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok
	v := *this
	for _, v := range v {
		if err := v.bindRefs(c); err != nil {
			return err
		}
	}

	return nil
}

func (this *Workbook2ConfItem) bindRefs(c *Collection) error {
	if this == nil {
		return nil
	}

	var ok bool
	_ = ok

	return nil
}
